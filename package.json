{
  "name": "linter-flake8",
  "main": "./lib/main.js",
  "version": "2.4.0",
  "description": "Atom linter plugin for Python, using flake8",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/AtomLinter/linter-flake8"
  },
  "engines": {
    "atom": ">=1.9.0 <2.0.0"
  },
  "activationHooks": [
    "language-python:grammar-used",
    "MagicPython:grammar-used",
    "django-atom:grammar-used",
    "atom-django:grammar-used"
  ],
  "configSchema": {
    "executablePath": {
      "type": "string",
      "default": "flake8",
      "description": "Semicolon-separated list of paths to a binary (e.g. `/usr/local/bin/flake8`). Use `$PROJECT` or `$PROJECT_NAME` substitutions for project specific paths (e.g. `$PROJECT/.venv/bin/flake8;/usr/bin/flake8`).",
      "order": 1
    },
    "configFile": {
      "type": "array",
      "default": [],
      "description": "Comma-separated list of relative paths (from project) to flake8 config files. If any is found, it overrides flake8 built-in config file discovery.",
      "items": {
        "type": "string"
      },
      "order": 2
    },
    "flakeErrors": {
      "description": "Convert flake8 `F` messages to linter errors.",
      "type": "boolean",
      "default": false,
      "order": 3
    },
    "pycodestyleErrorsToWarnings": {
      "description": "Convert pycodestyle `E` messages to linter warnings.",
      "type": "boolean",
      "default": false,
      "order": 4
    },
    "flake8": {
      "type": "object",
      "title": "Override flake8 settings",
      "order": 5,
      "properties": {
        "alwaysOverride": {
          "title": "Override settings from config file",
          "description": "Override settings from project config file (i.e. `.flake8`, `tox.ini`, `setup.cfg`, or manually specified ones).",
          "type": "boolean",
          "default": false,
          "order": 1
        },
        "maxLineLength": {
          "type": "integer",
          "default": 79,
          "order": 2
        },
        "ignoreErrorCodes": {
          "description": "Comma-separated list of errors and warnings to ignore (e.g. `E4,E51,W234`).",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 3
        },
        "selectErrorCodes": {
          "description": "Comma-separated list of errors and warnings to enable (e.g. `E4,E51,W234`).",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 4
        },
        "builtins": {
          "description": "Comma-separated list of additional built in variables.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "order": 5
        },
        "maxComplexity": {
          "description": "McCabe complexity threshold (`-1` to disable).",
          "type": "integer",
          "default": -1,
          "order": 6
        },
        "hangClosing": {
          "description": "Hang closing bracket instead of matching indentation of opening bracket's line.",
          "type": "boolean",
          "default": false,
          "order": 7
        }
      }
    }
  },
  "dependencies": {
    "atom-linter": "^10.0.0",
    "atom-package-deps": "^5.0.0",
    "fs-plus": "^3.0.0",
    "semver": "^5.4.1"
  },
  "devDependencies": {
    "eslint": "^4.6.0",
    "eslint-config-airbnb-base": "^12.0.0",
    "eslint-plugin-import": "^2.7.0",
    "jasmine-fix": "^1.0.1"
  },
  "package-deps": [
    "linter:2.0.0"
  ],
  "scripts": {
    "test": "apm test",
    "lint": "eslint ."
  },
  "eslintConfig": {
    "extends": "airbnb-base",
    "rules": {
      "global-require": "off",
      "import/no-unresolved": [
        "error",
        {
          "ignore": [
            "atom"
          ]
        }
      ]
    },
    "globals": {
      "atom": true
    },
    "env": {
      "node": true,
      "browser": true
    }
  },
  "providedServices": {
    "linter": {
      "versions": {
        "2.0.0": "provideLinter"
      }
    }
  }
}
